{"version":3,"sources":["model/sortElement.ts","algorithm/heapSort.ts","App.tsx","reportWebVitals.ts","reducers/index.ts","sagas/index.ts","store.ts","index.tsx"],"names":["Action","Status","heapSort","elements","action","arr","steps","OP","items","step","stepCnt","k","length","heapify","marks","n","i","push","COMPARE","SWAP","COMPELTE","sort","history","cur","prev","speed","l","r","largest","HIGHLIGHT","val","LARGEST","App","store","useStore","SortData","useSelector","state","renderCount","useRef","current","type","payload","dispatch","useEffect","Array","from","keys","reduce","acc","idx","Math","random","status","NORMAL","key","getStatusColor","SELECTED","className","last","slice","map","JSON","stringify","element","style","flex","display","alignItems","justifyContent","height","marginLeft","backgroundColor","color","fontSize","trackStyle","handleStyle","borderColor","width","marginTop","onChange","e","value","min","max","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","applyNextStep","isForward","nextStep","filter","j","temp","playTask","incrementAsync","callSelfOnTimer","forwardStep","backwardStep","playHistory","playHistoryCall","playHistoryToCall","pausePlay","rootSaga","put","delay","call","select","len","fork","timerTask","cancel","numSteps","abs","takeEvery","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9991c29e.chunk.js","sourcesContent":["export interface SortElement {\n  key: string;\n  val: number;\n  status: Status;\n}\n\nexport interface SortStep {\n  step: number;\n  action: Action;\n  items: number[];\n}\n\nexport interface SortDto {\n  elements: SortElement[];\n  history: SortStep[];\n  cur: number;\n  last: number;\n  prev: number;\n  speed: number;\n  marks: any;\n}\n\nexport enum Action {\n  SWAP = \"SWAP\",\n  HIGHLIGHT = \"HIGHLIGHT\",\n  LARGEST = \"LARGEST\",\n  COMPARE = \"COMPARE\",\n  COMPELTE = \"COMPELTE\",\n  OP = \"OP\",\n}\n\nexport enum Status {\n  NORMAL = \"NORMAL\",\n  SELECTED = \"SELECTED\",\n  LARGEST = \"LARGEST\",\n  SWAP = \"SWAP\",\n  COMPELTE = \"COMPELTE\",\n}\n","import { SortStep, Action, SortDto, SortElement } from \"../model/sortElement\";\n\nexport function heapSort(elements: SortElement[], action: any) {\n  const arr = [...elements];\n\n  let steps: SortStep[] = [{ action: Action.OP, items: [], step: 0 }];\n  let stepCnt = 1;\n\n  for (let k = arr.length / 2 - 1; k >= 0; k--) {\n    heapify(arr, arr.length, k, steps);\n  }\n\n  let marks = {\n    [steps.length]: \"Heapify\",\n  };\n\n  sort(arr, arr.length, steps);\n\n  steps.push({\n    step: stepCnt++,\n    action: Action.SWAP,\n    items: [],\n  } as SortStep);\n\n  action(\"INIT\", {\n    elements,\n    history: steps,\n    cur: 0,\n    prev: 0,\n    speed: 0,\n    marks,\n  } as SortDto);\n}\n\nfunction heapify(arr: SortElement[], n: number, i: number, steps: SortStep[]) {\n  let l = 2 * i + 1;\n  let r = 2 * i + 2;\n  let largest = i;\n  if (l < n) {\n    steps.push({\n      step: steps.length,\n      action: Action.HIGHLIGHT,\n      items: [l, largest],\n    } as SortStep);\n    if (arr[l].val > arr[largest].val) {\n      steps.push({\n        step: steps.length,\n        action: Action.COMPARE,\n        items: [l, largest],\n      } as SortStep);\n      largest = l;\n      steps.push({\n        step: steps.length,\n        action: Action.LARGEST,\n        items: [largest],\n      } as SortStep);\n    }\n  }\n  if (r < n) {\n    steps.push({\n      step: steps.length,\n      action: Action.HIGHLIGHT,\n      items: [r, largest],\n    } as SortStep);\n    if (arr[r].val > arr[largest].val) {\n      steps.push({\n        step: steps.length,\n        action: Action.COMPARE,\n        items: [r, largest],\n      } as SortStep);\n      largest = r;\n      steps.push({\n        step: steps.length,\n        action: Action.LARGEST,\n        items: [largest],\n      } as SortStep);\n    }\n  }\n\n  if (largest !== i) {\n    //swap\n    steps.push({\n      step: steps.length,\n      action: Action.COMPARE,\n      items: [i, largest],\n    } as SortStep);\n    steps.push({\n      step: steps.length,\n      action: Action.SWAP,\n      items: [i, largest],\n    } as SortStep);\n    [arr[largest], arr[i]] = [arr[i], arr[largest]];\n    heapify(arr, n, largest, steps);\n  }\n}\n\nfunction sort(arr: SortElement[], n: number, steps: SortStep[]) {\n  for (let i = n - 1; i >= 0; i--) {\n    //swap\n    steps.push({\n      step: steps.length,\n      action: Action.COMPARE,\n      items: [i, 0],\n    } as SortStep);\n    steps.push({\n      step: steps.length,\n      action: Action.SWAP,\n      items: [i, 0],\n    } as SortStep);\n    [arr[0], arr[i]] = [arr[i], arr[0]];\n    steps.push({\n      step: steps.length,\n      action: Action.COMPELTE,\n      items: [i],\n    } as SortStep);\n    heapify(arr, i, 0, steps);\n  }\n}\n","import React, { useEffect, useReducer, useRef, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useSelector, useStore } from \"react-redux\";\nimport {\n  Action,\n  SortDto,\n  SortElement,\n  SortStep,\n  Status,\n} from \"./model/sortElement\";\nimport { Button, Slider } from \"antd\";\nimport \"antd/dist/antd.dark.css\";\nimport \"antd/dist/antd.compact.css\";\nimport { bubbleSort } from \"./algorithm/bubbleSort\";\nimport { heapSort } from \"./algorithm/heapSort\";\nimport { PlayCircleFilled } from \"@ant-design/icons\";\n\nconst sampleSize = 100;\n\nfunction App() {\n  const store: any = useStore();\n  const SortData: SortDto = useSelector((state: SortDto) => state);\n  const renderCount = useRef(0);\n  renderCount.current = renderCount.current + 1;\n\n  const action = (type: any, payload?: any) =>\n    store.dispatch({ type, payload });\n\n  useEffect(() => {\n    const elements: SortElement[] = Array.from(Array(sampleSize).keys()).reduce(\n      (acc: SortElement[], n: number, idx: number) => {\n        const val = Math.random() * sampleSize + 1;\n        //const val = 10 - n;\n        acc.push({\n          val,\n          status: Status.NORMAL,\n          key: `${idx}_${val}`,\n        });\n        return acc;\n      },\n      []\n    );\n\n    // bubble sort\n    //bubbleSort(elements, action);\n    heapSort(elements, action);\n  }, []);\n\n  const timeout = (ms: number) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  const handleCancelSort = () => {\n    action(\"PAUSE_HISTORY\");\n  };\n\n  const handleResume = () => {\n    action(\"PLAY_HISTORY\");\n  };\n\n  const getStatusColor = (status: Status) => {\n    if (status === Status.NORMAL) {\n      return \"rgba(169, 92, 232, 0.8)\";\n    } else if (status === Status.SELECTED) {\n      return \"green\";\n    } else if (status === Status.SWAP) {\n      return \"red\";\n    } else if (status === Status.COMPELTE) {\n      return \"navy\";\n    } else if (status === Status.LARGEST) {\n      return \"yellow\";\n    }\n  };\n\n  const onSliderChange = (e: any) => {\n    action(\"PLAY_HISTORY_TO\", e);\n  };\n\n  return (\n    <div className=\"body\">\n      <div className=\"side-panel\">\n        {/* <button\n          onClick={() => {\n            action(\"INCREMENT_ASYNC\");\n          }}\n        >\n          Add\n        </button> */}\n        Steps:\n        {SortData.history ? SortData.history.length : 0}\n        <br />\n        Cur: {SortData.cur}\n        <br />\n        Last: {SortData.last}\n        <br />\n        Speed: {SortData.speed}\n        {SortData &&\n          SortData.history &&\n          SortData.history\n            .slice(SortData.cur, SortData.cur + 50)\n            .map((step: SortStep, idx: number) => {\n              return (\n                <div className=\"log-contianer\" key={`${step.step}`}>\n                  <div\n                    className={\n                      idx === 0\n                        ? \"log-content-action first\"\n                        : \"log-content-action\"\n                    }\n                  >{`#${step.step} ${step.action}`}</div>\n                  <div\n                    className={\n                      idx === 0\n                        ? \"log-content-items first\"\n                        : \"log-content-items\"\n                    }\n                  >{`${JSON.stringify(step.items)}`}</div>\n                </div>\n              );\n            })}\n      </div>\n      <div className=\"container\">\n        <div className=\"content\">\n          {SortData &&\n            SortData.elements &&\n            SortData.elements.map((element: SortElement) => {\n              const { val, key, status } = element;\n              return (\n                <div\n                  key={key}\n                  style={{\n                    flex: \" 1 0 auto\",\n                    display: \"flex\",\n                    alignItems: \"flex-end\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <div\n                    className=\"element\"\n                    style={{\n                      height: `${(100 * val) / sampleSize}%`,\n                      flex: \"1 0 auto\",\n                      marginLeft: \"1px\",\n                      backgroundColor: getStatusColor(status),\n                      color: \"white\",\n                      fontSize: \"1px\",\n                    }}\n                  ></div>\n                </div>\n              );\n            })}\n        </div>\n        <div className=\"footer\">\n          <div className=\"slider-container\">\n            {SortData && SortData.history && (\n              <Slider\n                trackStyle={{ backgroundColor: \"gray\" }}\n                handleStyle={{\n                  borderColor: \"gray\",\n                  height: \"20px\",\n                  width: \"20px\",\n                  marginLeft: \"0px\",\n                  marginTop: \"-8px\",\n                }}\n                onChange={onSliderChange}\n                value={SortData.cur}\n                min={0}\n                max={SortData.history.length - 1}\n              />\n            )}\n          </div>\n          <div onClick={handleCancelSort} className=\"button\">\n            Pause\n          </div>\n          <div onClick={handleResume} className=\"button\">\n            Resume\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useForm } from \"antd/lib/form/Form\";\nimport { stat } from \"fs\";\nimport {\n  Action,\n  SortDto,\n  SortElement,\n  SortStep,\n  Status,\n} from \"../model/sortElement\";\n\nexport default function element(state: SortDto = {} as any, action: any) {\n  switch (action.type) {\n    case \"INIT\":\n      return { ...action.payload };\n    case \"ADD_STEP\":\n      const payload: SortStep = {\n        ...action.payload,\n        step: state.history.length + 1,\n      };\n      return { ...state, history: [...state.history, payload] };\n    case \"ADD_STEPS\":\n      return {\n        ...state,\n        history: action.payload.map((e: any, idx: number) => ({\n          ...e,\n          step: idx,\n        })),\n      };\n    case \"FORWARD_STEP\":\n      if (state.history.length > 0) {\n        return applyNextStep(state, true);\n      }\n      return state;\n    case \"BACKWARD_STEP\":\n      if (state.history.length > 0) {\n        return applyNextStep(state, false);\n      }\n      return state;\n    case \"CAL_SPEED\":\n      const prev = state.prev;\n      const cur = state.cur;\n      const speed = cur - prev;\n      return { ...state, prev: cur, speed };\n    default:\n      return state;\n  }\n}\n\nfunction applyNextStep(state: SortDto, isForward: boolean): SortDto {\n  const elements = [...state.elements];\n\n  const step = isForward ? state.cur : state.cur - 1;\n  const nextStep = state.history[step];\n  for (let element of elements.filter((e) => e.status !== Status.COMPELTE)) {\n    element.status = Status.NORMAL;\n  }\n  if (nextStep.action === Action.HIGHLIGHT) {\n    for (let i of nextStep.items) {\n      elements[i].status = Status.SELECTED;\n    }\n  } else if (nextStep.action === Action.LARGEST) {\n    for (let i of nextStep.items) {\n      elements[i].status = Status.LARGEST;\n    }\n  } else if (nextStep.action === Action.COMPARE) {\n    for (let i of nextStep.items) {\n      elements[i].status = Status.SWAP;\n    }\n  } else if (nextStep.action === Action.COMPELTE) {\n    for (let i of nextStep.items) {\n      elements[i].status = Status.COMPELTE;\n    }\n  } else if (nextStep.action === Action.SWAP) {\n    const [i, j] = nextStep.items;\n    const temp = elements[i];\n    elements[i] = elements[j];\n    elements[j] = temp;\n  }\n\n  return {\n    ...state,\n    elements,\n    last: state.cur,\n    cur: state.cur + (isForward ? 1 : -1),\n  };\n}\n","import {\n  put,\n  call,\n  takeEvery,\n  delay,\n  select,\n  all,\n  fork,\n  cancel,\n} from \"redux-saga/effects\";\nimport { SortDto, SortElement } from \"../model/sortElement\";\n\nexport function* incrementAsync() {\n  //yield delay(1000);\n  yield put({ type: \"INCREMENT\" });\n}\n\n// export function* initElements(elements: SortElement[]) {\n//   //yield delay(1000);\n//   yield put({ type: \"INIT\", payload: elements });\n// }\n\nfunction* callSelfOnTimer(): any {\n  yield delay(1000);\n  yield put({ type: \"CAL_SPEED\" });\n  yield call(callSelfOnTimer);\n}\n\nfunction* forwardStep() {\n  yield put({ type: \"FORWARD_STEP\" });\n}\n\nfunction* backwardStep() {\n  yield put({ type: \"BACKWARD_STEP\" });\n}\n\nexport function* playHistory() {\n  let cur = yield select((state: SortDto) => state.cur);\n  let len = yield select((state: SortDto) => state.history.length);\n\n  const timerTask = yield fork(callSelfOnTimer);\n\n  while (cur < len) {\n    yield fork(forwardStep);\n    yield delay(0);\n    cur = yield select((state: SortDto) => state.cur);\n  }\n\n  yield cancel(timerTask);\n}\n\nexport function* playHistoryCall() {\n  playTask = yield fork(playHistory);\n}\n\nexport function* playHistoryToCall(action: any) {\n  let cur = yield select((state: SortDto) => state.cur);\n  let numSteps = action.payload - cur;\n  if (numSteps !== 0) {\n    const isForward = numSteps >= 0;\n    numSteps = Math.abs(numSteps);\n    if (isForward) {\n      numSteps++;\n    }\n    while (numSteps > 0) {\n      yield call(isForward ? forwardStep : backwardStep);\n      numSteps--;\n    }\n\n    yield delay(0);\n  }\n}\n\nfunction* pausePlay() {\n  yield cancel(playTask);\n}\n\nlet playTask: any;\n\nexport default function* rootSaga() {\n  yield takeEvery(\"INCREMENT_ASYNC\", incrementAsync);\n  yield takeEvery(\"PLAY_HISTORY\", playHistoryCall);\n  yield takeEvery(\"PLAY_HISTORY_TO\", playHistoryToCall);\n  yield takeEvery(\"PAUSE_HISTORY\", pausePlay);\n\n  // yield takeEvery(\"*\", function* logger(action) {\n  //   const state = yield select();\n\n  //   console.log(\"action\", action);\n  //   console.log(\"state after\", state.history.length);\n  // });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}